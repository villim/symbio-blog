buildscript {
    repositories {
    	maven {
      		url "https://plugins.gradle.org/m2/"
    	}
    	
    	//jcenter()
    }

    dependencies {
        classpath "org.ajoberstar:grgit:1.1.0"
        classpath "com.netflix.nebula:gradle-ospackage-plugin:4.8.0"
        //compile 'org.codehaus.groovy:groovy-all:2.4.1'
        //classpath 'org.spockframework:spock-core:1.0-groovy-2.4'
    }
}

plugins {
    id 'nebula.release' version '6.3.5'
}

allprojects {
    apply plugin: 'java'
    apply plugin: 'eclipse'

    group = 'com.acs.ps'
    version = '1.0.0-SNAPSHOT'

    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    repositories {
        mavenCentral()
        maven { url "http://nexus.dev.activenetwork.com/nexus/content/repositories/thirdparty/" }
    }

    dependencies {
    	compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.7'
    	compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.21'
    }
}


ext {
	hibernateCoreVersion = '5.1.3.Final'
	commonDBCP2Version = '2.1'
	springVersion = '5.0.5.RELEASE'
    springWSVersion = '2.4.3.RELEASE'
	springDataVersion = '2.0.6.RELEASE'
	springBootVersion = '2.0.1.RELEASE'
	springSessionVersion = '1.3.3.RELEASE'
	aspectjVersion = '1.8.8'
	gsonVersion = '2.8.5'
	hazelcastVersion = '3.10.2'	
	
	// Open the Git repository in the current directory.
    git = org.ajoberstar.grgit.Grgit.open(file('.'))
    //grgit.init(dir: <path>, bare: <boolean>)
    // Get commit id of HEAD.
    gitRevision = git.head().id
    // Alternative is using abbreviatedId of head() method.
    gitAbbRevision = git.head().abbreviatedId
}



