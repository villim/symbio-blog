 buildscript {

    repositories {
        mavenCentral()
    }
    
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
 }
 
 apply plugin: 'org.springframework.boot'
 apply plugin: 'io.spring.dependency-management'
 apply plugin: 'nebula.ospackage'
 
 
 def moduleVersion="${project.version}"
 version="${project.version}-${gitAbbRevision}"
 
 dependencies {
	compile project(":blog-infrastructure")

    //compile("org.springframework:spring-core:${springVersion}")
    //compile("org.springframework:spring-context:${springVersion}")
    compile("org.springframework:spring-context-support:${springVersion}")
    //compile("org.springframework.session:spring-session:${springSessionVersion}")
    compile("org.springframework.security:spring-security-config:${springVersion}")
    //compile("org.springframework.security:spring-security-web:${springVersion}")
	
    compile("org.springframework.boot:spring-boot-starter-web:${springBootVersion}") { exclude module: "spring-boot-starter-tomcat"    }
    compile("org.springframework.boot:spring-boot-starter-log4j2:${springBootVersion}")
    compile("org.springframework.boot:spring-boot-starter-jetty:${springBootVersion}")	

    compile("com.hazelcast:hazelcast-client:${hazelcastVersion}")
    compile("org.apache.commons:commons-dbcp2:${commonDBCP2Version}")
    compile("com.google.code.gson:gson:${gsonVersion}")
    compile("org.apache.logging.log4j:log4j-web:2.1")
    compile('org.aspectj:aspectjweaver:1.8.13')
    compile('org.aspectj:aspectjrt:1.9.1')
    compile("com.h2database:h2:1.4.194") 
	
 }

 configurations { all*.exclude module : 'spring-boot-starter-logging' }
 
 ospackage {
    packageName = "${project.name}"
    version = "${project.version}"
    release = '1'
    arch = I386
    os = LINUX
    user='deploy'
    permissionGroup='deploy'
}

buildRpm {
    requires('blog-init', "${version}", EQUAL)
    
    directory("/opt/symbio/apps/blog/${project.name}", 0744)
    
    from("build/libs") {
    	fileMode = 0755
        createDirectoryEntry = false
        addParentDirs = false
        into "/opt/symbio/apps/blog/${project.name}"
        
        rename { String fileName ->
        	"${project.name}.jar"
    	}
    }
    
    from("src/main/spring-shell") {
    	fileMode = 0755
        createDirectoryEntry = false
        addParentDirs = false
        into "/opt/symbio/apps/blog/${project.name}"
    }
    
}    


task getVersions(dependsOn: processResources) {
    doLast {
    	def separator = System.getProperty('line.separator')
        def version = project.version.toString()
        boolean success = new File("$buildDir/resources/main/version.properties").delete()
        def file = new File("$buildDir/resources/main/version.properties")
        file << "project.version=${moduleVersion}$separator"
        file << "git.version=${gitRevision}$separator"
        file << "git.abbreviated.version=${gitAbbRevision}$separator"
    }
}

classes {
    dependsOn getVersions
}